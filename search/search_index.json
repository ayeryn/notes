{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Notes","text":"<p>Using mkdocs and GitPages for notes organization.</p>"},{"location":"cpp/","title":"CPP","text":"<ul> <li>Header Files</li> <li><code>g++</code> Compilation</li> <li>Range-based For Loop (since <code>C++11</code>)</li> <li>Syntax</li> <li>Temporary Range Expression</li> <li><code>std::vector</code></li> <li><code>std::queue</code></li> <li><code>priority_queue</code></li> <li><code>std::map</code></li> <li><code>std::tuple</code></li> <li>Miscellaneous</li> <li>Check C++ Standard</li> </ul>"},{"location":"cpp/#header-files","title":"Header Files","text":"<p>Header files in cpp store predefined functions. It contains definitions of functions that you can include or import during a preprocessor directive <code>#include</code>.</p> <p>This preprocessor directive tells the compiler that the header file needs to be processed prior to the compilation.</p>"},{"location":"cpp/#g-compilation","title":"<code>g++</code> Compilation","text":"<ul> <li>When multiple <code>.cpp</code> files are needed, all of them need to be included</li> </ul> <pre><code>$ g++ main.cpp $dir/*.cpp -o a.out\n</code></pre>"},{"location":"cpp/#range-based-for-loop-since-c11","title":"Range-based For Loop (since <code>C++11</code>)","text":""},{"location":"cpp/#syntax","title":"Syntax","text":"<pre><code>attr(optional) for (init-statement(opt.) range-declaration : range-expression)\n</code></pre>"},{"location":"cpp/#temporary-range-expression","title":"Temporary Range Expression","text":""},{"location":"cpp/#stdvector","title":"<code>std::vector</code>","text":"<pre><code>#include &lt;vector&gt;\n\nstd::vector&lt;int&gt; v = {1, 2, 3, 4}\n</code></pre>"},{"location":"cpp/#stdqueue","title":"<code>std::queue</code>","text":"<pre><code>#include &lt;queue&gt;\n</code></pre>"},{"location":"cpp/#priority_queue","title":"<code>priority_queue</code>","text":"<pre><code>std::priority_queue&lt;int&gt; pq {v.begin(), v.end()}\n</code></pre>"},{"location":"cpp/#stdmap","title":"<code>std::map</code>","text":"<pre><code>#include &lt;map&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    map&lt;int, int&gt; counter;\n    vector&lt;int&gt; v = {4, 4, 5, 5, 5, 6};\n\n    for (auto it = v.begin(); it != v.end(); it++)\n    {\n        /*\n         * Since counter is int-to-int mapping\n         * First encounter with any key has an initialized\n         * value of 0\n         */\n        counter[*it] += 1;\n    }\n\n    for (auto it = counter.begin(); it != counter.end(); it++)\n    {\n        // map.key: -&gt;first\n        // map.value: -&gt;second\n        cout &lt;&lt; it-&gt;first &lt;&lt; \" \" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/#stdtuple","title":"<code>std::tuple</code>","text":"<p><code>#include &lt;tuple&gt;</code></p>"},{"location":"cpp/#miscellaneous","title":"Miscellaneous","text":""},{"location":"cpp/#check-c-standard","title":"Check C++ Standard","text":"<pre><code>$ g++ -x c++  -E -dM -&lt; /dev/null | grep __cplusplus\n</code></pre>"},{"location":"css/","title":"CSS","text":""},{"location":"css/#transition","title":"Transition","text":"<ul> <li><code>transition</code> is shorthand for:</li> <li><code>transition-property</code></li> <li><code>transition-duration</code></li> <li><code>transition-timing-function</code></li> <li> <p><code>transition-delay</code></p> </li> <li> <p>Always put it on the base class instead of modified class</p> </li> </ul> <pre><code>#box{\n    background-color: lightskyblue;\n    width: 50%;\n    height: 50%;\n    /* put here instead of on hover */\n    transition: transform 1s ease-in 3s;\n}\n\n#box:hover {\n    transform: translateX(100%);\n}\n</code></pre>"},{"location":"css/#transition-property","title":"<code>transition-property</code>","text":"<p><code>transition-property</code> is used to define what properties to apply a transition effect to.</p> <ul> <li><code>all</code> - (Default) all properties will get a transition effect</li> <li><code>none</code> - no property will get a transition effect</li> <li><code>&lt;property&gt;</code> - defines a comma separated list of CSS property names</li> <li><code>initial</code> - sets this property to its default value</li> <li><code>inherit</code> - inherits the property from its parent element</li> </ul> <pre><code>div {\n    transition-property: width, height\n}\n\ndiv:hover {\n    width: 300px;\n    height: 400px;\n}\n</code></pre>"},{"location":"css/#transition-timing-function","title":"<code>transition-timing-function</code>","text":"<ul> <li><code>ease</code> - (Default) specifies a transition effect with a slow start, then   fast, then end slowly</li> <li><code>linear</code> - the same speed from start to end</li> <li><code>ease-in</code> - slow start</li> <li><code>ease-out</code> - slow end</li> <li><code>ease-in-out</code> - start start and slow end</li> <li><code>cubic-bezier(n, n, n, n)</code> - lets you define your own values in a cubic-bezier   function.</li> <li>Tip: You can inspect an element with transition and adjust visually\\     </li> </ul>"},{"location":"css/#animation","title":"Animation","text":"<ul> <li><code>animation</code> is short for:</li> <li><code>animation-name</code> (required)</li> <li><code>animation-duration</code> (required)</li> <li><code>animation-timing-function</code></li> <li><code>animation-delay</code></li> <li><code>animation-iteration-count</code></li> <li><code>animation-direction</code></li> <li><code>animation-fill-mode</code></li> <li> <p><code>animation-play-state</code></p> </li> <li> <p>Write it in the place where you want it to happen, i.e., on the modified class</p> </li> </ul> <pre><code>#box{\n    background-color: lightskyblue;\n    width: 50%;\n    height: 50%;\n    transition: transform 1s ease-in 3s;\n}\n\n#box:hover {\n    animation: left-to-right 1s ease-in;\n}\n\n@keyframes left-to-right {\n    100% {\n        transform: translateX(100%);\n    }\n}\n</code></pre> <ul> <li><code>@keyframes</code>: specifies the animation code. The animation is created by   gradually changing from one set of CSS styles to another</li> </ul> <pre><code>#box{\n    background-color: lightskyblue;\n    width: 50%;\n    height: 50%;\n    transition: transform 1s ease-in 3s;\n}\n\n#box:hover {\n    animation: left-to-right 1s ease-in;\n}\n\n@keyframes left-to-right {\n    /* default state */\n    0% {\n        transform: translateX(0);\n    }\n\n    33% {\n        background-color: purple;\n        transform: translateY(100%)\n    }\n\n    100% {\n        transform: translateX(100%);\n    }\n}\n</code></pre>"},{"location":"flask/","title":"Running app","text":"<pre><code>$ flask --app &lt;app name&gt; run\n</code></pre> <p>OR</p> <pre><code>$ export FLASK_APP=&lt;app name&gt;\n$ flask run\n</code></pre> <p>OR</p> <pre><code>$ python &lt;app&gt;.py\n</code></pre>"},{"location":"flask/#tips-and-tools","title":"Tips and Tools","text":""},{"location":"flask/#random-text-generator-secrets-module","title":"Random Text Generator (secrets module)","text":"<pre><code>&gt;&gt;&gt; import secrets\n&gt;&gt;&gt; secrets.token_hex(&lt;byte&gt;)\n</code></pre>"},{"location":"flask/#use-virtual-environment","title":"Use Virtual Environment","text":"<pre><code>$ python -m venv venv\n</code></pre>"},{"location":"flask/#sqlalchemy","title":"SQLAlchemy","text":""},{"location":"flask/#dbrelationship","title":"<code>db.Relationship()</code>","text":""},{"location":"flask/#lazy-parameter","title":"<code>lazy</code> Parameter","text":"<p>Lazy parameter determines how the related objects get loaded when querying through relationships.</p> <ul> <li><code>lazy='select'</code> (or <code>True</code>) (default)\\   It emits a <code>SELECT</code> statement</li> <li><code>lazy=dynamic</code></li> </ul>"},{"location":"flask/#dbcreate_all","title":"<code>db.create_all()</code>","text":"<p>It is the command that creates database tables based on the models or classes defined in your application.</p> <p>When your run your application and call <code>db.create_all()</code> for the first time, it will create the necessary tables. Subsequent runs won't recreate the tables if they already exist.</p> <ul> <li>Model Definitions</li> <li>Database initialization</li> <li>Table creation</li> </ul>"},{"location":"flask/#extract","title":"<code>extract()</code>","text":""},{"location":"flask/#python-repl-examples-gymlog","title":"Python REPL Examples (GymLog)","text":"<pre><code>&gt;&gt;&gt; from app import app, db\n&gt;&gt;&gt; app.app_context().push()\n&gt;&gt;&gt; db.create_all()\n&gt;&gt;&gt; from app import GymClass, Attendance\n&gt;&gt;&gt;\n</code></pre>"},{"location":"flask/#flask-migrate","title":"flask-migrate","text":""},{"location":"flask/#how-to-add-flask-migrate-to-an-existing-project","title":"How to add <code>flask-migrate</code> to an existing project?","text":"<ol> <li>At root directory, init the package    <pre><code>$ flask db init\n</code></pre></li> </ol> <p>This command creates the database.</p> <ol> <li>Run the initial migration    <pre><code>$ flask db migrate -m \"Initial migration\"\n</code></pre></li> </ol> <p>This command detects differences between the current database and    models defined in your files, and generates migration script if there    are any.</p> <p>a. If database has already been created - for example, by <code>db.create_all()</code> -    the command won't detect any changes, thus generating nothing\\    <code>INFO  [alembic.env] No changes in schema detected.</code></p> <p>Workaround: compare models to an empty database    <pre><code>$ export DATABASE_URL=sqlite:///\n</code></pre>    This command creates an empty database in memory.</p> <ol> <li>Run the upgrade. This command applies changes in the migration script to the    database.    <pre><code>$ flask db upgrade\n</code></pre></li> </ol> <p>a. If the database already exists and matches the current models, you can    stamp the current database.    <pre><code>$ flask db stamp head\n</code></pre></p> <p>This command adds the alembic metadata to the database to indicate that the    database is updated to the latest provision. Basically, stamp this database    with the HEAD revision.</p>"},{"location":"flask/#how-to-migrate-future-changes","title":"How to migrate future changes?","text":"<p>A new column has been added to the table --</p> <ol> <li>Generate migration script    <pre><code>$ flask db migrate\n</code></pre></li> <li>Apply migration    <pre><code>$ flask db upgrade\n</code></pre></li> </ol>"},{"location":"js/","title":"React/Javascipt Notes","text":""},{"location":"js/#react","title":"React","text":"<ul> <li>What is React?</li> <li> <p>React is a popular open-source Javascript library used for building UIs or front-end applications</p> </li> <li> <p>Key: reusable components</p> </li> <li>Components:</li> <li>Properties (Props)</li> </ul>"},{"location":"js/#state","title":"State","text":"<p>Always lift the state up to the parent component. The parent component can pass that state back to the children via props. This keeps the child components in sync with each other and with their parent. All children re-render automatically when parent changes.</p>"},{"location":"js/#usestate","title":"<code>useState</code>","text":"<p>A function that allows you to add state to functional components. It requires the initial value of the state and returns an array with two elements:</p> <ol> <li>current state value</li> <li>a function that allows you to update the state</li> </ol>"},{"location":"js/#re-rendering-a-list","title":"Re-rendering a list","text":"<p><code>Warning: Each child in a list should have a unique \"key\" prop.</code></p> <p>When a list is re-rendered, React takes each list item's ley and searches the previous list's items for a matching key.</p> <ul> <li>If the current list has a key that didn't exist before, React creates a component.</li> <li>If the current list is missing a key that existed in the previous list, React destroys the previous component.</li> <li>If two keys match, the corresponding component is moved.</li> </ul> <p>Keys tell React about the identity of each component, which allows React to maintain state between re-renders.</p> <ul> <li>If a component's key changes, the component will be destroyed and re-created with a new state.</li> </ul> <p>When a element is created, React extracts the <code>key</code> property and sotres the key directly on the returned element. There's no way for a component to ask what <code>key</code> its parent specified.</p>"},{"location":"js/#js","title":"JS","text":""},{"location":"js/#spread-syntax","title":"Spread syntax (<code>...</code>)","text":"<ul> <li>Allows an iterable to be expanded.</li> <li>In an object literal, the spread syntax enumerates the properties of an object and adds the key-value pairs to the object being created.</li> </ul> <p>kinda like python scripting. </p> <p>All indices are enumerable own properties, so arrays can be spread into objects.</p> <pre><code>const array = [1, 2, 3]\nconst obj = { ...array };\n// { 0: 1, 1: 2, 2: 3}\n</code></pre>"},{"location":"js/#array-map-method","title":"array <code>map</code> method","text":"<pre><code>[1, 2, 3].map((x) =&gt; x * 2) //[2, 4, 6]\n</code></pre>"},{"location":"js/#var-v-let","title":"<code>var</code> v. <code>let</code>","text":"<ul> <li><code>var</code>: used to declare a function-scoped variable.</li> <li>accessible throughout the entire function.</li> <li><code>let</code>: used to declare a block-scoped variable.</li> <li>only accessible within the block scope in which it is defined</li> </ul> <pre><code>function example() {\n  let x = 10;\n  if (true) {\n    let x = 20;\n    console.log(x); // Output: 20\n  }\n  console.log(x); // Output: 10\n}\n</code></pre>"},{"location":"html/html-attributes/","title":"HTML Attributes","text":"<p>Attributes provide information about and functionality for the element. Attributes define the behavior, linkages, and functionality of elements.</p>"},{"location":"html/html-attributes/#boolean-attributes","title":"Boolean attributes","text":"<p>If one (or more) of these attributes is present, the element is disabled, required, readonly, etc. If not present, it isn't.</p> <p>Boolean values can either be omitted, set to an empty string, or be the name of the attribute. All values will resolve to true.</p> <pre><code>&lt;!-- They are equivalent --&gt;\n&lt;input required /&gt;\n&lt;input required=\"\" /&gt;\n&lt;input required=\"required\" /&gt;\n</code></pre> <p>When toggling between true and false, add and remove the attribute altogether with JavaScript rather than toggling the value.</p> <pre><code>const myMedia = document.getElementById(\"mediaFile\");\nmyMedia.removeAttribute(\"muted\");\nmyMedia.setAttribute(\"muted\");\n</code></pre>"},{"location":"html/html-attributes/#enumerated-attributes","title":"Enumerated attributes","text":"<p>They have a limited set of predefined valid values.</p>"},{"location":"html/html-attributes/#global-attributes","title":"Global attributes","text":"<p>They are attributes that can be set on any HTML element, includign elements in the <code>&lt;head&gt;</code>. Global attributes</p>"},{"location":"html/html-attributes/#id","title":"<code>&lt;id&gt;</code>","text":"<ul> <li>The target of a link's fragment identifier</li> <li>Identifying an element for scripting</li> <li>Associating a form element with its label</li> <li>Providing a label or description for assistive technologies</li> <li>Targeting styles with (high specificity or as attribute selectors) in CSS.</li> </ul>"},{"location":"html/html-attributes/#link-fragment-identifier","title":"Link fragment identifier","text":"<p>Links are not restricted to HTTP-based URLs; they can be fragment identifiers to sections of the page in the current document (or in other documents)</p> <p>When a URL includes a hash mar (<code>#</code>) followed by a string of characters, that string is a fragment identifier. If that string matches an <code>id</code> of an element in the web page, the fragment is an anchor, or bookmark, to that element.</p> <p>Setting <code>href=\"top</code>, case-insensitive, or simply <code>href=#</code>, will scroll the user to the top of the page.</p> <p><code>#</code> is not part of the fragment identifier. It's always the last part of the URL and is not sent to the server.</p>"},{"location":"html/html-attributes/#css-selectors","title":"CSS selectors","text":"<p>Is CSS, you can target each section using an id selector, such as <code>#news</code> or, for less specificity, a case-sensitive attribute selector, <code>[id=\"news]</code>.</p> index.html<pre><code>&lt;div id=\"news\"&gt;News&lt;/div&gt;\n</code></pre> style.css<pre><code>#news {\n  color: red;\n}\n</code></pre>"},{"location":"html/html-attributes/#scripting","title":"Scripting","text":"<p>The <code>id</code> attribute of an element can by used as the parameter for the <code>getElementById()</code> method and, with a <code>#</code> prefix, as part of a parameter for the <code>querySelector()</code> and <code>querySelectorAll()</code> methods.</p> index.html<pre><code>&lt;img src=\"svg/switch.svg&gt;\" id=\"switch alt=\"light switch\" class=\"light /&gt;\n</code></pre> script.js<pre><code>const switchViaID = document.getElementById(\"switch\");\nconst switchViaSelector = document.querySelector(\"#switch\");\n</code></pre> index.html<pre><code>&lt;head&gt;\n  &lt;script&gt;\n  const onoff = document.getElementById(\"switch\");\n  onoff.addEventListener('click',function(){\n    document.body.classList.toggle('black');\n  });\n  &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>"},{"location":"html/html-attributes/#label","title":"<code>&lt;label&gt;</code>","text":"<p><code>&lt;label&gt;</code> has a <code>for</code> attribute that takes as its value the <code>id</code> of the form control with which it is associated.</p> <pre><code>&lt;label for=\"name\"&gt;Name: &lt;/label&gt;&lt;input id=\"name\" type=\"text\" name=\"name\" /&gt; &gt;\n</code></pre> <p>The association between for and id makes the information available to users of assistive technologies. In addition, clicking anywhere on a label gives focus to the associated element, extending the control's click area.</p>"},{"location":"html/html-attributes/#tabindex","title":"<code>tabindex</code>","text":"<p>This attribute can be added to any element to enable it to receive focus. The value defines whether it gets added to the tab order, and, optionally into a non-default tabbing order.</p>"},{"location":"html/html-attributes/#role","title":"<code>role</code>","text":"<p>The <code>role</code> attribute is part of the ARIA specification. It can be used to provide semantic meaning to content, enabling screen readers to inform site users of an object's expected user interaction.</p> <p>It doesn't change browser behavior or alter keyboard or pointer device interactions-adding <code>role=button</code> to a <code>&lt;spam&gt;</code> does not turn it into a button.</p>"},{"location":"html/html-attributes/#contenteditable","title":"<code>contenteditable</code>","text":"<p>An element with the <code>contenteditable</code> attribute set to <code>true</code> is editable, is focusable, and is added ot the tab order as if <code>tabindex=\"0\"</code> were set.</p> <pre><code>&lt;!-- These are equivalent&gt;\n&lt;An enumerated attribute: inherit(d), true, false --&gt;\n &lt;style contenteditable&gt;\n &lt;style contenteditable=\"\"&gt;\n &lt;style contenteditable=\"true\"&gt;\n</code></pre>"},{"location":"html/html-attributes/#toggle-and-set","title":"Toggle and set","text":"<pre><code>const editor = document.getElementById(\"myElement\");\nif (editor.contentEditable) {\n  editor.setAttribute(\"contenteditable\", \"false\");\n} else {\n  editor.setAttribute(\"contenteditable\", \"\");\n}\n</code></pre>"},{"location":"html/html-attributes/#fun-stuff","title":"Fun stuff","text":"<p>Since <code>contenteditable</code> is a global attribute, it can be applied to even <code>&lt;style&gt;</code>.</p> <pre><code>&lt;style contenteditable&gt;\n  style {\n    color: inherit;\n    display: block;\n    border: 1px solid;\n    font: inherit;\n    font-family: monospace;\n    padding: 1em;\n    border-radius: 1em;\n    white-space: pre;\n  }\n&lt;/style&gt;\n</code></pre> <ol> <li>Adding <code>&lt;style contenteditable&gt;</code> makes the <code>&lt;style&gt;</code> element's content editable in the browser.</li> <li>The code inside <code>&lt;style&gt;</code> is CSS that targets <code>&lt;style&gt;</code> elements so that they all have the style defined there.</li> <li>As a result, <code>&lt;style&gt;</code> renders on the final page unlike hidden per usual. We can also click into the element and change it. This also updates the style simultaneously.</li> </ol>"},{"location":"html/html-attributes/#custom-attributes","title":"Custom Attributes","text":"<p>You can create any custom attribute you want by adding the <code>data-</code> prefix.</p> <p>They are an excellent way of communicating application-specific information via JavaScript. Add custom attributes to elements in the form of <code>data-name</code> and access these through the DOM using <code>dataset[name]</code> on the element in question.</p> <pre><code>el.dataset[\"hello\"];\ne.dataset.hello;\n\nfor (let key in el.dataset) {\n  customObject[key] = el.dataset[key];\n}\n</code></pre>"},{"location":"html/html-text/","title":"HTML Text Basics","text":""},{"location":"html/html-text/#headings","title":"Headings","text":"<p>By default, browsers style <code>&lt;h1&gt;</code> the largest, <code>&lt;h2&gt;</code> slightly smaller, with each subsequent heading level being smaller by default.</p> <p>Browsers by default also decrement the <code>&lt;h1&gt;</code> font size based on how many <code>&lt;article&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;nav&gt;</code>, or <code>&lt;section&gt;</code> elements it is nested in.</p> <p></p> <p>To style nested <code>&lt;h1&gt;</code> elements:</p> <pre><code>/* \n- Any &lt;h2&gt; elements\n- Any &lt;h1&gt; elements that are inside any &lt;article&gt;, &lt;aside&gt;, &lt;nav&gt;, or &lt;section&gt; */\nh2,\n:is(article, aside, nav, section) h1 {\n}\n\n/* \n- Any h3 element\n- Any h1 that is inside a (article, aside, nav, section), which is itself inside a (article, aside, nav, section) */\nh3,\n:is(article, aside, nav, section) :is(article, aside, nav, section) h1 {\n}\n</code></pre> <p><code>:is()</code> is a CSS pseudo-class for grouping selectors, making them easier to write and more efficient.</p> <p><code>:is(a, b, c)</code> matches any element that matches selector a, b, or c.</p>"},{"location":"html/html-text/#quotes-and-citations","title":"Quotes and citations","text":"<ol> <li><code>&lt;blockquote&gt;</code></li> <li><code>&lt;q&gt;</code></li> <li><code>&lt;cite&gt;</code></li> </ol> <pre><code>&lt;h1&gt;Quotes and Citations&lt;/h1&gt;\n&lt;ul&gt;\n  &lt;li&gt;blockquote&lt;/li&gt;\n  &lt;li&gt;\n    &lt;blockquote&gt;\n      \u201cShe is a friend of my mind. She gather me, man. The pieces I am, she\n      gather them and give them back to me in all the right order. It's good,\n      you know, when you got a woman who is a friend of your mind.\u201d\n    &lt;/blockquote&gt;\n  &lt;/li&gt;\n  &lt;li&gt;cite&lt;/li&gt;\n  &lt;li&gt;&lt;cite&gt;To be or not to be, that is the question.&lt;/cite&gt;&lt;/li&gt;\n  &lt;li&gt;q&lt;/li&gt;\n  &lt;li&gt;&lt;q&gt;This is a quote.&lt;/q&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"html/html/","title":"HTML5","text":"<p>HyperText Markup Language.</p>"},{"location":"html/html/#links","title":"Links","text":"<ul> <li>web.dev HTML</li> </ul>"},{"location":"html/html/#document-structure","title":"Document Structure","text":"<pre><code>&lt;html lang=\"en-us\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;My Page&lt;/title&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;header&gt;&lt;/header&gt;\n    &lt;footer&gt;&lt;/footer&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>&lt;!DOCTYPE</code> html&gt;: the preamble</li> <li>doctype, tells the browser to use standards mode</li> <li><code>&lt;html&gt;</code>: the root element</li> <li><code>&lt;head&gt;</code>: the document metadata header, contains all the metadata for a site or application</li> <li><code>&lt;body&gt;</code>: contains the visible content</li> </ul>"},{"location":"html/html/#head","title":"<code>&lt;head&gt;</code>","text":""},{"location":"html/html/#mandatory","title":"Mandatory","text":"<p>Always include character set, title, and viewport settings.</p> <ul> <li>Character encoding: the first element to ensure the page loads properly</li> <li>Document title</li> <li>Viewport metadata</li> </ul>"},{"location":"html/html/#other-content","title":"Other content","text":""},{"location":"html/html/#css","title":"CSS","text":"<p>There are three ways to include CSS:</p> <ol> <li> <p><code>&lt;link&gt;</code>: use an external source with <code>rel=\"stylesheet\"</code> \ud83c\udf1f</p> </li> <li> <p><code>style.css</code> is the URL of the stylesheet</p> </li> <li><code>type=\"text/css\"</code> is not necessary</li> </ol> <pre><code>&lt;link rel=\"stylesheet\" href=\"style.css\" /&gt;\n</code></pre> <ol> <li><code>&lt;style&gt;</code>: direct CSS</li> <li><code>@import</code>: if you want the external stylesheet styles to be within a cascade layer but you don't have access to edit the CSS file to put the layer information in it.</li> <li>the <code>style</code> attribute</li> </ol>"},{"location":"html/html/#scripts","title":"Scripts","text":"<p>The default type is JavaScript.</p>"},{"location":"html/html/#metadata","title":"Metadata","text":""},{"location":"html/html/#pragma-directives","title":"Pragma directives","text":"<p>The <code>http-equiv</code> attribute has as its value a pragma directive. These directives describe how the page should be parsed. Supported <code>http-equiv</code> values enable setting directives when you are unable to set HTTP headers directly.</p> <pre><code>&lt;meta http-equiv=\"refresh\" content=\"60; https://mypage.com/regTimeout\" /&gt;\n</code></pre>"},{"location":"html/html/#open-graph","title":"Open Graph","text":"<p>Can be used to control how social media sites, like Twitter and Facebook, display links to your content. OG meta tags are used to create social media cards for your pages.</p>"},{"location":"html/html/#semantic-html","title":"Semantic HTML","text":"<p>Semantic means \"relating to meaning\".</p>"},{"location":"html/html/#accessibility-object-model-aom","title":"Accessibility object model (AOM)","text":"<p>As the browser parses the content received, it builds the document object model (DOM) and the CSS object model (CSSOM). It then also builds an accessibility tree.</p> <p>The DOM is a tree of all the nodes in the document. The AOM is like a semantic version of the DOM.</p>"},{"location":"html/html/#the-role-attribute","title":"The <code>role</code> attribute","text":"<p>It describes the role an element has in the context of the document.</p>"},{"location":"html/html/#semantic-elements","title":"Semantic elements","text":"<p>HTML should be used to structure content, not to define content's appearance. The appearance is the realm of CSS.</p>"},{"location":"html/html/#body","title":"<code>&lt;body&gt;</code>","text":"<p>A layout with a header, two sidebars, and a footer, is known as the holy grail layout.</p> <pre><code>&lt;body&gt;\n  &lt;header&gt;My Blog&lt;/header&gt;\n  &lt;nav&gt;Nav&lt;/nav&gt;\n  &lt;main&gt;\n    &lt;h1&gt;Posts&lt;/h1&gt;\n    &lt;article&gt;Article 1&lt;/article&gt;\n    &lt;article&gt;Article 2&lt;/article&gt;\n  &lt;/main&gt;\n  &lt;aisde&gt;Aside&lt;/aside&gt;\n  &lt;footer&gt;Footer&lt;/footer&gt;\n&lt;/body&gt;\n</code></pre>"},{"location":"html/html/#main","title":"<code>&lt;main&gt;</code>","text":"<p>This contains the main content of the document. There should be only one <code>&lt;main&gt;</code> per page.</p>"},{"location":"html/html/#aside","title":"<code>&lt;aside&gt;</code>","text":"<p>This is for content that is indirectly or tangentially related to the document's main content.</p>"},{"location":"html/html/#article","title":"<code>&lt;article&gt;</code>","text":"<p>An <code>&lt;article&gt;</code> represents a complete, or self-contained, section of content that is, in principle, independently reusable.</p>"},{"location":"html/html/#section","title":"<code>&lt;section&gt;</code>","text":"<p>This is used to encompass generic standalone sections of a document when there is no more specific semantic element to use.</p> <pre><code>&lt;header&gt;\n  &lt;h1&gt;Machine Learning Workshop&lt;/h1&gt;\n  &lt;nav&gt;\n    &lt;a href=\"#reg\"&gt;Register&lt;/a&gt;\n    &lt;a href=\"#about\"&gt;About&lt;/a&gt;\n    &lt;a href=\"#teachers\"&gt;Instructors&lt;/a&gt;\n    &lt;a href=\"#feedback\"&gt;Testimonials&lt;/a&gt;\n  &lt;/nav&gt;\n&lt;/header&gt;\n...\n&lt;footer&gt;\n  &lt;p&gt;&amp;copy;2022 Machine Learning Workshop, LLC. All rights reserved.&lt;/p&gt;\n  &lt;address&gt;\n    Instructors: &lt;a href=\"/hal.html\"&gt;Hal&lt;/a&gt; and &lt;a href=\"/eve.html\"&gt;Eve&lt;/a&gt;\n  &lt;/address&gt;\n&lt;/footer&gt;\n</code></pre> <p></p>"}]}